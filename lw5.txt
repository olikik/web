*************** Лабораторная работа 5 *************************************

=====================================================================
Задания.
---------------------------------------------------------------------
1. Напишите PHP приложение PrintQueryString, которое выводит данные переданные 
#5 в запросе. 

   Пример:

   Запрос
   HTTP 1.1 GET /print_query_string.php?my_name=Sarah&my_surname=Rever&message=British+are+coming+by+sea.

   Ответ
   Content-Type: text/plain

   Query string = 'my_name=Sarah&my_surname=Rever&message=British+are+coming+by+sea.'

2. Напишите PHP приложение PrintName, которое выводит сообщение "Hello, Dear <Name>!".
#5 <Name> заменяется на значение параметра name, переданного в GET запросе.

   Пример:

   Запрос
   HTTP 1.1 GET /print_name.php?name=Sarah

   Ответ
   Content-Type: text/plain

   Hello, Dear Sarah!

3. Определите заголовки запроса и ответа для приложения PrintName.
#5

4.  Разработайте приложение Remove Extra Blanks на языке PHP. 
#5  В запросе GET передается параметр text. 
    Скрипт выводит в стандартный поток вывода этот же текст без лишних пробелов.

5.  Разработайте PHP приложение Check Identifier, которое проверят является ли 
#10 переданный в GET параметр identifier индетификатором по правилу SR3.
    Программа должна выводить yes или no, а также поясняющую информацию в том случае, если
    передананя строка не является идентификатором.

    Правило SR3. 
    <идентификатор> ::= <буква> |
                        <идентификатор><буква> |
                        <идентификатор><цифра>
           

6.  Разработайте программу для проверки надежности пароля Password Strength. 
#20 В GET параметре password передается пароль для анализа. Пароль может состоять только из английских 
    символов в верхнем и нижнем регистрах, а также из цифр.

    Надежность пароля вычисляется по следующему принципу.   
    1) Изначально считаем надежность равной 0.
    2) К надежности прибавляется (4*n), где n - количество всех симоволов пароля
    3) К надежности прибавляется +(n*4), где n - количество цифр в пароле
    4) К надежности прибавляется +((len-n)*2) в случае, если пароль содержит n символов в верхнем регистре
    5) К надежности прибавляется +((len-n)*2) в случае, если пароль содержит n символов в нижнем регистре
    6) Если пароль состоит только из букв вычитаем число равное количеству символов.
    7) Если пароль состоит только из цифр вычитаем число равное количеству символов.
    8) За каждый повторяющийся символ в пароле вычитается количество повторяющихся символов
        Например: abcd1a 
        вычитаем -2 поскольку символ a встречается дважды.

    Программа должна выводить на экран надежность пароля в виде числа.

7.  Разработайте PHP приложение Survey Saver, которое сохраняет анкеты пользователей в файловой системе.
#20 Данные передаются в строке запроса.
    Возможные параметры запроса: first_name, last_name, email, age.
    Все файлы необходимо сохранять в директорию data. Название файла: <email>.txt

8.  Разработайте PHP приложение Survey Info, которое выводит данные анкеты пользователя.
#20 Выводить данные необходимо в виде:
     First Name: <name>
     Last Name: ...
     Email: <email>
     Age: 30
    В GET параметрах запроса передается email.
